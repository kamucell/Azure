{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworks_vnet_name": {
            "defaultValue": "vnet",
            "type": "String"
        },
        "virtualMachines_TestVM_name": {
            "defaultValue": "TestVM",
            "type": "String"
        },
        "routeTables_RouteTable_name": {
            "defaultValue": "RouteTable",
            "type": "String"
        },
        "azureFirewalls_Firewall_name": {
            "defaultValue": "Firewall",
            "type": "String"
        },
        "publicIPAddresses_PIFirewall_name": {
            "defaultValue": "PIFirewall",
            "type": "String"
        },
        "networkInterfaces_testvm731_z1_name": {
            "defaultValue": "testvm731_z1",
            "type": "String"
        },
        "networkSecurityGroups_TestVM_nsg_name": {
            "defaultValue": "TestVM-nsg",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-11-01",
            "name": "[parameters('networkSecurityGroups_TestVM_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-11-01",
            "name": "[parameters('publicIPAddresses_PIFirewall_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1"
            ],
            "properties": {
                "ipAddress": "172.174.152.130",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2022-11-01",
            "name": "[parameters('routeTables_RouteTable_name')]",
            "location": "eastus",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "Route1",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_RouteTable_name'), 'Route1')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.5.1.68",
                            "hasBgpOverride": false
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "name": "[parameters('virtualMachines_TestVM_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testvm731_z1_name'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-datacenter-azure-edition",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_TestVM_name'), '_disk1_c4e62de303c44d1b8bd6db8f28e50ccb')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_TestVM_name'), '_disk1_c4e62de303c44d1b8bd6db8f28e50ccb'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 127
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_TestVM_name')]",
                    "adminUsername": "[parameters('virtualMachines_TestVM_name')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        },
                        "enableVMAgentPlatformUpdates": false
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    },
                    "securityType": "TrustedLaunch"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testvm731_z1_name'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2023-03-01",
            "name": "[concat(parameters('virtualMachines_TestVM_name'), '/enablevmaccess')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_TestVM_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "VMAccessAgent",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "UserName": "TestVM1"
                },
                "protectedSettings": {}
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('routeTables_RouteTable_name'), '/Route1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RouteTable_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.5.1.68",
                "hasBgpOverride": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-11-01",
            "name": "[parameters('virtualNetworks_vnet_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RouteTable_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.5.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "middleTier",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_name'), 'middleTier')]",
                        "properties": {
                            "addressPrefix": "10.5.3.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "backTier",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_name'), 'backTier')]",
                        "properties": {
                            "addressPrefix": "10.5.4.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_name'), 'AzureFirewallSubnet')]",
                        "properties": {
                            "addressPrefix": "10.5.1.64/26",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_name'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.5.0.0/24",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RouteTable_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.1.64/26",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_name'), '/backTier')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.4.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_name'), '/middleTier')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.3.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2022-11-01",
            "name": "[parameters('azureFirewalls_Firewall_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_PIFirewall_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_name'), 'AzureFirewallSubnet')]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "[concat('PI', parameters('azureFirewalls_Firewall_name'))]",
                        "id": "[concat(resourceId(concat('Microsoft.Network/azure', parameters('azureFirewalls_Firewall_name'), 's'), parameters('azureFirewalls_Firewall_name')), concat('/azure', parameters('azureFirewalls_Firewall_name'), 'IpConfigurations/PI', parameters('azureFirewalls_Firewall_name')))]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_PIFirewall_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_name'), concat('Azure', parameters('azureFirewalls_Firewall_name'), 'Subnet'))]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [
                    {
                        "name": "WebDeny",
                        "id": "[concat(resourceId(concat('Microsoft.Network/azure', parameters('azureFirewalls_Firewall_name'), 's'), parameters('azureFirewalls_Firewall_name')), '/networkRuleCollections/WebDeny')]",
                        "properties": {
                            "priority": 500,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "HttpHttpsAllow",
                                    "protocols": [
                                        "TCP",
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": [],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "801",
                                        "4431"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [],
                "natRuleCollections": [
                    {
                        "name": "Role1",
                        "id": "[concat(resourceId(concat('Microsoft.Network/azure', parameters('azureFirewalls_Firewall_name'), 's'), parameters('azureFirewalls_Firewall_name')), '/natRuleCollections/Role1')]",
                        "properties": {
                            "priority": 200,
                            "action": {
                                "type": "Dnat"
                            },
                            "rules": [
                                {
                                    "name": "rdp",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "translatedAddress": "10.5.0.4",
                                    "translatedPort": "3389",
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": [],
                                    "destinationAddresses": [
                                        "172.174.152.130"
                                    ],
                                    "destinationPorts": [
                                        "3389"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "name": "[parameters('networkInterfaces_testvm731_z1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_TestVM_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_testvm731_z1_name')), '/ipConfigurations/ipconfig1')]",
                        "etag": "W/\"f6ace1e1-fde0-4a48-b3ea-f64b00dc2d60\"",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.5.0.4",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_TestVM_nsg_name'))]"
                },
                "nicType": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RouteTable_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.0.0/24",
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_RouteTable_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        }
    ]
}
